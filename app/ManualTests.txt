How to run Manual Tests

For all tests: 
    clear "questions.txt" file
    "gradle build" in terminal to build app
    "gradle run" in terminal to start app

Story 1: 
    Test 1: Click ask question and ask a question (Can also use TestChatWhisper1, will output to terminal)
        Step 1: Start app
        Step 2: Click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response
        Step 5: Check output
            a: In top panel, text saying "What is 1 plus 1?" should appear
            b: In bottom panel, text saying "1 plus 1 is 2." should appear
            c: In side panel, button with "What is 1 plus 1" should appear

    Test 2: Click ask question button without asking question (Can also use TestChatWhisper2, will output to terminal)
        Step 1: start app
        Step 2: click "Ask Question" button and wait 3 seconds
        Step 3: click "Stop Question" button and wait for response
        Step 4: Check output
            a: In top panel, text saying "Microphone didn't pickup any sound" should appear
            b: In bottom panel, nothing should appear
            c: In side panel, nothing should appear

Story 2:
    Test 1: View history with no questions asked
        Step 1: Start app
        Step 2: Check UI
            a: Side bar should have no buttons
            b: top panel should be blank
            c: bottom panel should be blank
            d: footer should have 3 buttons, "Clear All", "Delete Question", and "Ask Question", in this order

    Test 2: View history after asking a question (same as US1 Test 1)
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response
        Step 5: Check output
            a: In top panel, text saying "What is 1 plus 1?" should appear
            b: In bottom panel, text saying "1 plus 1 is 2." should appear
            c: In side panel, button with "What is 1 plus 1" should appear

    Test 3: Click Quesion Button on sidebar
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response
        Step 5: click "Ask Question" button and wait 1 second
        Step 6: Say "What is 2 plus 2" and wait 1 second
        Step 7: Click "Stop Question" button and wait for response
        Step 8: Click "What is 1 plus 1" button on side bar
        Step 9: Check output
            a: In top panel, text saying "What is 2 plus 2?" should change to "What is 1 plus 1?"
            b: In bottom panel, text saying "2 plus 2 is 4." should change to "1 plus 1 is 2."

Story 3:
    Test 1: Click Delete question without any question selected
        Step 1: Start app
        Step 2: Click delete question
        Step 3: Check UI
            a: Side bar should have no questions
            b: In top panel, there should be no question text
            c: In bottom panel, there should be no answer text
            
    Test 2: Click Delete question with question selected
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response
        Step 5: click "Ask Question" button and wait 1 second
        Step 6: Say "What is 2 plus 2" and wait 1 second
        Step 7: Click "Stop Question" button and wait for response
        Step 8: Click "What is 1 plus 1" button on side bar
        Step 9: Click "Delete question" button
        Step 10: Check UI
            a: In the top panel, there should be no question text
            b: In the bottom panel, there should be no answer text
            c: In the side bar, "What is 1 plus 1" button should disappear

    Test 3: Click Delete question while question is being asked
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response 
        Step 5: click "Ask Question" button and wait 1 second
        Step 6: Say "What is 2 plus 2"
        Step 7: Before an answer is generated click "What is 1 plus 1" button on side bar
        Step 8: Before an answer is generated click "Delete question"
        Step 8: Before an answer is generated check UI
            a: In the top panel, it should still display "What is 2 plus 2"
            b: In the bottom panel, it should either still be blank from loading
            c: In the sidebar, "What is 1 plus 1" should still be present
    
Story 4:
    Test 1: User clears history with no question and answer in history
        Step 1 : Start app
        Step 2: Click "Clear" button
        Step 3: Check UI
            a: Side bar should have no questions
            b: In top panel, there should be no question text
            c: In bottom panel, there should be no answer getText

    Test 2: User clears history 
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response 
        Step 5: click "Ask Question" button and wait 1 second
        Step 6: Say "What is 2 plus 2" and wait 1 second
        Step 7: Click "Stop Question" button and wait for response
        Step 8: Click "Clear" button
        Step 9: Check UI:
            a: Side bar should have no questions
            b: In top panel, there should be no question text
            c: In botton panel, there should be no answer text
    
    Test 3: User clears history while answer to question is still loading
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button
        Step 5: Click "Clear" button before response is generated.
        Step 6: Check UI after response is generated:
            a: Side bar should have one question button: "What is 1 plus 1?"
            b: Top Panel should have the question "What is 1 plus 1?"
            b: Bottom Panel should have the response "1 plus 1 is 2."
        Step 7: click "Ask Question" button and wait 1 second
        Step 8: Say "What is 2 plus 2" and wait 1 second
        Step 9: Click "Stop Question" 
        Step 10: Click "Clear" button before response is generated.
        Step 11: Check UI after response is generated:
            a: Side bar should have two question buttons: "What is 1 plus 1?", and "What is 2 plus 2?"
            b: Top Panel should have the question "What is 2 plus 2?"
            b: Bottom Panel should have the response "2 plus 2 is 4."

Story 5:
    Test 1: Test that Ctrl-C allows for copying highlighted text
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response
        Step 5: Highlight the text in the bottom panel and use Ctrl-C
        Step 6: Open a place where you can paste text and use Ctrl-V
        Step 7: Check output
            a: Should paste "1 plus 1 is 2."

    Test 2: Test that Ctrl-V allows for pasting copied text (Same as US5 Test 1)
        Step 1: Start app
        Step 2: click "Ask Question" button and wait 1 second
        Step 3: Say "What is 1 plus 1" and wait 1 second
        Step 4: Click "Stop Question" button and wait for response
        Step 5: Highlight the text in the bottom panel and use Ctrl-C
        Step 6: Open a place where you can paste text and use Ctrl-V
        Step 7: Check output
            a: Should paste "1 plus 1 is 2."

    
Story 6:
    Test 1: Creating an account, check if it exists in database
        Step 1: Start app
        Step 2: Click on the "Create Account" button
        Step 3: Type "testUser" in the Username field
        Step 4: Type "abcde" in the Password field
        Step 5: Type "abcde" in the Confirm Password field
        Step 6: Click on the the "Create Account" button
        Step 7: Check output
            a: No error message should appear about the Create Account button if the username is not taken
            b: A popup should appear asking :Do you want to automatically login next time?
        Step 8: Click on "Yes" or "No"
        Step 9: Check ouput
            a: The chat app should appear
        Step 10: Go to Atlas database and check if the username and password using "Browse Collecitons"

    Test 2: Check UI, make sure buttons call correct functions and text fields properly recieve text input
        Step 1: Start app
        Step 2: Click on the "Create Account" button
        Step 3: Check output:
            a: The frame should switch to the Create Account frame
        Step 4: Click on the "Create Account" button
        Step 5: Check output:
            a: The frame should switch to asking the user about automatically logging in next time
        Step 6: Restart the app
        Step 7: Enter "testUser" for the username and "abcde" for the password
        Step 8: Click on the "Log In" button
        Step 9: Check output
            a: The frame should switch to asking the user about automatically logging in next time
        Step 10: Click on "Yes" or "No"
        Step 11: Check output
            a: The frame should switch to the Say It app

    Test 3: Check if the create account feature detects invalid accounts username and passwords
        Step 1: Start app
        Step 2: Click on the "Create Account" button
        Step 3: Type "testUser" in the Username field
        Step 4: Type "abcde" in the Password field
        Step 5: Type "12345" in the Confirm Password field
        Step 6: Click on the the "Create Account" button
        Step 7: Check output
            a: The error message should show up saying "passwords do not match"
        Step 8: Type "testUser" in the Username field
        Step 9: Type "abcde" in the Password field
        Step 10: Type "abcd" in the Confirm Password field
        Step 11: Check output
            a: The error message should show up saying "Username taken"
    
    Test 4: Check if the login feature detects invalid login attempts
        Step 1: Start app
        Step 2: Type "testUser" in the Username field
        Step 3: Type "12345" in the Password field
        Step 4: Click on the the "Log In" button
        Step 5: Check output
            a: The error message should show up saying "Incorrect password"
        Step 6: Type "testUser1234" in the Username field
        Step 7: Type "abcde" in the Password field
        Step 8: Click on the the "Log In" button
        Step 9: Check output
            a: The error message should show up saying "No account with that username"

Story 7:
    Test 1: Ask question on new account
        Step 1: Start app and create a new account with username a and password b
        Step 2: The app should be empty besides the start button
        Step 3: Click the start button and say "Question: what is 1 plus 1" and wait for a response
        Step 4: The response "Answer: 1 + 1 = 2" should appear in the answer box
        Step 5: Close the app
        Step 6: Reopen the app and login with username a and password b
        Step 7: Check if the button for the prompt "Question: what is 1 plus 1" is in the side bar
        Step 8: Click the button and make sure that the question and answer are the same as before
        Step 9: Check the database and go to the account a and make sure that the question is saved under the Commands tab

Story 8: All done through automated testing

Story 9:
    Test 1: Test no automatic login
        Step 1: Start the app
        Step 2: login with username test@test.com and password abcd1234
        Step 3: You should be asked if you want to automatically login, click no
        Step 4: Close the app
        Step 5: Reopen the app and you should be at the login screen.

    Test 2: Test automatic login
        Step 1: Start the app
        Step 2: login with username test@test.com and password abcd1234
        Step 3: You should be asked if you want to automatically login, click yes
        Step 4: Close the app
        Step 5: Reopen the app and you should be at the main screen with the ask button.
    
Story 10: All done through automated testing
    
Story 11: 
    Test 1: Create email with everything setup correctly
        Step 1: Start the app
        Step 2: Click on the start button
        Step 3: Say “Create email to John. I want to meet up”
        Step 4: Click stop
        Step 5: Check output
            a: The question box should say “Create email to John. I want to meet up”
            b: The output UI box should have the command with the words “Best Regards, Alex” appended to the end
    Test 2: Send Email with an email already created and valid sender info
        Step 1: Run after Test 1
        Step 2: Click on the start button
        Step 3: Say “Send email to dwng at UCSD dot edu”
        Step 4: Click stop
        Step 5: Check output
            a: The question box should say "Send email to dwng@ucsd.edu
            b: The output UI box should have the message “Email sent successfully”
            c: The email should appear in the email dwng@ucsd.edu saying “To John, I want to meet up. Best Regards, Alex” 
    Test 3: Send email with an email already created and invalid sender info
        Step 1: Run after Test 1
        Step 2: Click on the start button
        Step 3: Say command “Send email to dwng at UCSD dot edu”
    The text “Send email to dwng@ucsd.edu” should appear in the input UI box
    The text “Setup information invalid” should appear in the output UI box
    Test 4: Send email without an email created
    Run without Test 1, say command “Send email to dwng at UCSD dot edu”
    The text “Send email to dwng@ucsd.edu” should appear in the input UI box
    The text “No email to send” should appear in the output UI box